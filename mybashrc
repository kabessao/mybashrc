setxkbmap br

procurar () {

    if [ ! -t 1 ] ; then 
        if [ ! -t 0 ] ; then 
            while read line; do 
                OUTPUT=`grep $@ $line 2> /dev/null` && echo $line
            done
        else
            find | while read line; do 
                OUTPUT=`grep $@ $line 2> /dev/null` && echo $line
            done
        fi
    elif [ ! -t 0 ] ; then 
        while read line; do 
            if OUTPUT=`grep $@ $line 2> /dev/null`; then
                printf "\n\n===============\n$line\n\n${OUTPUT}\n"
            fi
        done
    else
        find | procurar $@
    fi

}

dbset () {
	if [ -f  ~/properties/$@ ]; then
		export PROPERTIES_FILE=~/properties/$@
	elif [ -f $PWD/$@ ]; then
		export PROPERTIES_FILE=$PWD/$@
	else
		echo "Arquivo de propriedades nÃ£o existe"
	fi
}

dbgo () {
	. $PROPERTIES_FILE
	
	cd "$WORKSPACE/$@"
}

parse_git_branch() {
     git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/ (\1)/'
}

mvn_core (){
	mvn -U verify -s ~/settings.xml
}

mvn_cliente() {
	mvn verify -Didempiere.target="$(ls | grep *.p2.targetplatform)" -s ~/settings.xml
}

code_monitor () {
	printf " Procurando... \r" 
	while ! find ~/migrat* 2> /dev/null ; do 
		sleep .10
	done;
	code ~/migrat*
}

lsdb () {
	. $PROPERTIES_FILE
	exec_db - << EOF | awk -F '|' '{printf "%-20s %s\n" ,$1 , $2}'

SELECT datname, pg_size_pretty(pg_database_size(datname)) FROM pg_database WHERE datname ILIKE '${PREFIX}%'
;

EOF

        
}

db_count () { 
	. $PROPERTIES_FILE
        [ ! -e "$HOME/NO_DBCOUNT" ] &&
	exec_db - << EOF | awk -F "|" '{printf "Bancos: %d, Total: %s" , $1, $2}'
SELECT COUNT(datname),pg_size_pretty(sum(pg_database_size(datname)))  FROM pg_database WHERE datname ILIKE '${PREFIX}%'
;

EOF
        
}

exec_db() {

        local CODE DATABASE
	. $PROPERTIES_FILE

        DATABASE="template1"

        while [ ! -z "$1" ] ; do
            case $1 in 
            -d) 
                shift;
                DATABASE=$1;
                shift;
            ;;
            *) 
                if [ "$1" == "-" ] ; then 
                    CODE=""
                    while read line ; do
                      CODE+="$line"
                    done
                else 
                    CODE=$1
                fi
                shift
            ;;
            esac
        done
                
	PGPASSWORD=${DB_PASSWORD} psql -h ${DB_SERVER} -p ${DB_PORT} -U ${DB_USER} -d ${DATABASE} -t -A -c "${CODE}" 
}

quebra_linha () { 

	local cols pathLength result;
	cols=$(tput cols);
	pathLength=${#PWD}
	result=$(((pathLength*100/cols)))
	if [ $result -gt 40 ];
	then 
		echo -e "\n:\$";
	else  
		echo "$";
	fi;
}

script_migracao () {
    local COUNT
    COUNT=`ls ~/migra* 2> /dev/null | wc -l`
    if [ ! -z "${COUNT}" ] && [ ${COUNT} -gt 0 ]; then
        echo ", Scripts: ${COUNT}"
    fi
}

export JAVA_HOME=/opt/jdk-11.0.2

#export PS1='\[\033[0;36m\]Properties file: $PROPERTIES_FILE | $(db_count) $(script_migracao) $(parse_git_branch)\n\[\e]0;\u@\h: \w\a\]${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]$(quebra_linha) '
